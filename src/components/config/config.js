import React from 'react';
import { createChatBotMessage } from 'react-chatbot-kit';


import UserOption from '../user-option';


const botName = '–ë–æ—Ä–∏—Å';

const config = {    
    botName: botName,
    customComponents: {
        header: () => <div style={{ color: '#fff', backgroundColor: '#376B7E', padding: "10px", borderRadius: "3px" }}>{botName}</div>
    },
    customStyles: {
        botMessageBox: {
            backgroundColor: "#376B7E",
        },
        chatButton: {
            backgroundColor: "#376B7E",
        },
    },
    widgets: [  
        // defaultOptions             
        {
            widgetName: 'defaultOptions',
            widgetFunc: (props) => <UserOption {...props} />,
            props: {
                options: [
                    {
                        id: 1,
                        text: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã', 
                        handler: 'handleStartUsageQuestionsList',                         
                    },
                    {
                        id: 2,
                        text: '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', 
                        handler: 'handleProfileQuestionsList',                         
                    },
                    {
                        id: 3,
                        text: '–°–æ–æ–±—â–µ–Ω–∏—è', 
                        handler: ()=>{}, 
                    },
                    { 
                        id: 4,
                        text: '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è', 
                        handler: ()=>{},
                    },
                    { 
                        id: 5,
                        text: '–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã', 
                        handler: ()=>{},
                    },
                    { 
                        id: 6,
                        text: '–ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ', 
                        handler: ()=>{},
                    },
                    {
                        id: 7,
                        text: '–ö–∞—Ä—Ç—ã', 
                        handler: ()=>{}, 
                    },
                    {
                        id: 8,
                        text: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', 
                        handler: ()=>{}, 
                    },   
                    
                ],
            }
        },         
        // startUsageQuestionsList  
        {
            widgetName: 'startUsageQuestionsList',
            widgetFunc: (props) => <UserOption {...props} />,
            props: {
                options: [
                    {
                        id: 1,
                        text: '–° —á–µ–≥–æ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –ø–æ—Ä—Ç–∞–ª–æ–º?',
                        handler: 'handleStartUsageQuestion',
                    },
                    {
                        id: 2,
                        text: '–ó–∞—á–µ–º –Ω—É–∂–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è?',
                        handler: 'handleStartUsageQuestion',
                    },
                    {
                        id: 3,
                        text: '–ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ?',
                        handler: 'handleStartUsageQuestion',
                    },
                    {
                        id: 4,
                        text: '–ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.',
                        handler: 'handleStartUsageQuestion',
                    },
                    {
                        id: 5,
                        text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–∞–∑–¥–µ–ª–∞–º',
                        handler: 'handleDefaultOptions',
                    },
                ],
            }
        },
        // startUsageConversationReturn
        {
            widgetName: 'startUsageConversationReturn',
            widgetFunc: (props) => <UserOption {...props} />,
            props: {
                options: [
                    {
                        id: 1,
                        text: '–£ –º–µ–Ω—è –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É',
                        handler: 'handleStartUsageQuestionsList',                        
                    },
                    {
                        id: 2,
                        text: '–í—Å–µ —Ä–∞–∑–¥–µ–ª—ã',
                        handler: 'handleDefaultOptions',                        
                    },
                ],
            },
        },   
        // profileQuestionsList
        {
            widgetName: 'profileQuestionsList',
            widgetFunc: (props) => <UserOption {...props} />,
            props: {
                options: [
                    {
                        id: 1,
                        text: '–ö–∞–∫ –≤–æ–π—Ç–∏ –≤ —É—á—ë—Ç–Ω—É—é –∑–∞–ø–∏—Å—å?',
                        handler: 'handleProfileQuestion',
                    },
                    {
                        id: 2,
                        text: '–ö–∞–∫ –∑–∞–π—Ç–∏ –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç?',
                        handler: 'handleProfileQuestion',
                    },
                    {
                        id: 3,
                        text: '–ù–µ –ø—Ä–∏—à–ª–æ –ø–∏—Å—å–º–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email.',
                        handler: 'handleProfileQuestion',
                    },
                    {
                        id: 4,
                        text: '–ß—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ —è –∑–∞–±—ã–ª –ø–∞—Ä–æ–ª—å –æ—Ç —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏?',
                        handler: 'handleProfileQuestion',
                    },
                    {
                        id: 5,
                        text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–∞–∑–¥–µ–ª–∞–º',
                        handler: 'handleDefaultOptions',
                    },
                ],
            }
        },         
        // profileConversationReturn
        {
            widgetName: 'profileConversationReturn',
            widgetFunc: (props) => <UserOption {...props} />,
            props: {
                options: [
                    {
                        id: 1,
                        text: '–£ –º–µ–Ω—è –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É',
                        handler: 'handleProfileQuestionsList',                        
                    },
                    {
                        id: 2,
                        text: '–í—Å–µ —Ä–∞–∑–¥–µ–ª—ã',
                        handler: 'handleDefaultOptions',                        
                    },
                ],
            }
        }
    ],
    initialMessages: [
        createChatBotMessage("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª, —á—Ç–æ–±—ã —è —Å–º–æ–≥ –≤–∞–º –ø–æ–º–æ—á—åüòä", {widget: 'defaultOptions'})
    ],
};

export default config;
