[{"C:\\dev\\chatbot\\src\\index.js":"1","C:\\dev\\chatbot\\src\\components\\app\\app.js":"2","C:\\dev\\chatbot\\src\\components\\action-provider\\index.js":"3","C:\\dev\\chatbot\\src\\components\\action-provider\\action-provider.js":"4","C:\\dev\\chatbot\\src\\components\\config\\index.js":"5","C:\\dev\\chatbot\\src\\components\\message-parser\\index.js":"6","C:\\dev\\chatbot\\src\\components\\message-parser\\message-parser.js":"7","C:\\dev\\chatbot\\src\\components\\config\\config.js":"8","C:\\dev\\chatbot\\src\\components\\learning-options\\index.js":"9","C:\\dev\\chatbot\\src\\components\\learning-options\\learning-options.js":"10"},{"size":202,"mtime":1607088242775,"results":"11","hashOfConfig":"12"},{"size":516,"mtime":1607088496975,"results":"13","hashOfConfig":"12"},{"size":81,"mtime":1607088326734,"results":"14","hashOfConfig":"12"},{"size":989,"mtime":1607089225752,"results":"15","hashOfConfig":"12"},{"size":56,"mtime":1607088409587,"results":"16","hashOfConfig":"12"},{"size":78,"mtime":1607088357376,"results":"17","hashOfConfig":"12"},{"size":446,"mtime":1607089014229,"results":"18","hashOfConfig":"12"},{"size":681,"mtime":1607090588082,"results":"19","hashOfConfig":"12"},{"size":148,"mtime":1607089763872,"results":"20","hashOfConfig":"12"},{"size":870,"mtime":1607090649930,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1fhiac5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\chatbot\\src\\index.js",[],["46","47"],"C:\\dev\\chatbot\\src\\components\\app\\app.js",[],"C:\\dev\\chatbot\\src\\components\\action-provider\\index.js",[],"C:\\dev\\chatbot\\src\\components\\action-provider\\action-provider.js",["48"],"import React from 'react';\r\n\r\nclass ActionProvider {\r\n    constructor (createChatBotMessage, setStateFunc, createClientMessage) {\r\n        this.createChatBotMessage = createChatBotMessage;\r\n        this.setState = setStateFunc;\r\n        this.createClientMessage = createClientMessage;\r\n    }\r\n\r\n    updateChatbotState = (message) => {\r\n        // NOTE: This function is set in the constructor, and is passed in      \r\n        // from the top level Chatbot component. The setState function here     \r\n        // actually manipulates the top level state of the Chatbot, so it's     \r\n        // important that we make sure that we preserve the previous state.\r\n\r\n        this.setState(prevState => ({\r\n            ...prevState, messages: [...prevState.messages, message]\r\n        }));\r\n    }\r\n\r\n    meet = () => {\r\n        const meetingMessage = this.createChatBotMessage('Nice to meet you too');\r\n        this.updateChatbotState(meetingMessage);\r\n    }\r\n};\r\n\r\nexport default ActionProvider;","C:\\dev\\chatbot\\src\\components\\config\\index.js",[],"C:\\dev\\chatbot\\src\\components\\message-parser\\index.js",[],"C:\\dev\\chatbot\\src\\components\\message-parser\\message-parser.js",["49"],"import React from 'react';\r\n\r\nclass MessageParser {\r\n    constructor (actionProvider, state) {\r\n        this.actionProvider = actionProvider;\r\n        this.state = state;\r\n    }\r\n\r\n    parse = (message) => {\r\n        console.log(message);\r\n\r\n        const lowercasedMessage = message.toLowerCase();\r\n\r\n        if(lowercasedMessage.includes('meet')) {\r\n            this.actionProvider.meet();\r\n        }\r\n    }\r\n};\r\n\r\nexport default MessageParser;","C:\\dev\\chatbot\\src\\components\\config\\config.js",[],"C:\\dev\\chatbot\\src\\components\\learning-options\\index.js",["50"],"import { getDefaultNormalizer } from '@testing-library/react';\r\nimport LearningOptions from './learning-options';\r\n\r\nexport default LearningOptions;","C:\\dev\\chatbot\\src\\components\\learning-options\\learning-options.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"59","line":1,"column":10,"nodeType":"57","messageId":"58","endLine":1,"endColumn":30},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'getDefaultNormalizer' is defined but never used.","no-global-assign","no-unsafe-negation"]